<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
	default-autowire="byName" default-destroy-method="destroy">

	<context:component-scan base-package="com.eastrobot.robotdev.controller">
		 <!-- 制定扫包规则 ,只扫描使用@Controller注解的JAVA类 -->
         <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
    
     <!-- 
    ByteArrayHttpMessageConverter converts byte arrays.
    StringHttpMessageConverter converts strings.
    ResourceHttpMessageConverter converts to/from org.springframework.core.io.Resource for all media types.
    SourceHttpMessageConverter converts to/from a javax.xml.transform.Source.
    FormHttpMessageConverter converts form data to/from a MultiValueMap<String, String>.
    Jaxb2RootElementHttpMessageConverter converts Java objects to/from XML — added if JAXB2 is present on the classpath.
    MappingJackson2HttpMessageConverter (or MappingJacksonHttpMessageConverter) converts to/from JSON — added if Jackson 2 (or Jackson) is present on the classpath.
    AtomFeedHttpMessageConverter converts Atom feeds — added if Rome is present on the classpath.
    RssChannelHttpMessageConverter converts RSS feeds — added if Rome is present on the classpath.
     -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
<!--             <ref bean="byteArrayHttpMessageConverter"/> -->
            <!-- 配置Fastjson支持 -->
            <ref bean="fastJsonHttpMessageConverter"/>
            <!-- 修改默认的Json转换器 mappingJacksonHttpMessageConverter -->
<!--             <ref bean="mappingJacksonHttpMessageConverter"/> -->
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    
	<!-- 开始spring mvc的注解  -->
	<!-- fastJson -->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="charset" value="UTF-8"/>
        <property name="supportedMediaTypes">
            <list>
                <!--这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                <value>text/html;charset=UTF-8</value>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <property name="features">
            <array>
                <value>WriteMapNullValue</value>
                <value>WriteNullStringAsEmpty</value>
                <value>WriteNullNumberAsZero</value>
                <value>WriteNullListAsEmpty</value>
                <value>WriteNullBooleanAsFalse</value>
            </array>
        </property>
    </bean>
    
    <!-- exceptionMessageAdapter，这个是处理转化json异常的适配器(这个配置对于调试查找问题还是非常有用的) -->
    <bean id="exceptionMessageAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">  
       <property name="messageConverters">  
           <list>  
               <!-- Support JSON -->   
               <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>  
           </list>  
       </property>  
   </bean> 
	
	<!-- 不拦截静态资源 -->
    <mvc:resources mapping="/**/*.html" location="/" />
    <mvc:resources mapping="/**/*.htm" location="/" />
    <mvc:resources mapping="/**/*.swf" location="/" />
    <mvc:resources mapping="/**/*.flv" location="/" />
    <mvc:resources mapping="/**/*.js" location="/" />
    <mvc:resources mapping="/**/*.css" location="/" />
    <mvc:resources mapping="/**/*.png" location="/" />
    <mvc:resources mapping="/**/*.gif" location="/" />
    <mvc:resources mapping="/**/*.jpg" location="/" />
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/wxImages/**" location="/wxImages/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/pages/**" location="/pages/"/>
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    <mvc:resources mapping="/Scripts/**" location="/Scripts/"/>
    <mvc:resources mapping="/swf/**" location="/swf/"/>
    
	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->  
	
    <!-- use thymeleaf  --> 
	<bean id="templateResolver" class="org.thymeleaf.spring3.templateresolver.SpringResourceTemplateResolver" >  
        <property name="prefix" value="/WEB-INF/app/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        <property name="cacheable" value="false" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
    </bean>
    
    <!-- html view resolver -->
    <bean id="htmlViewResolver" class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
    	<property name="order" value="1"/>
    	<property name="characterEncoding" value="UTF-8"/>
    	<property name="templateEngine" ref="templateEngine" />
    </bean>
    
    <import resource="classpath:spring-router.xml" />
</beans>